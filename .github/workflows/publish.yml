name: Publish new version
run-name: Publish new ${{ inputs.bump }} version from ${{ github.ref_name }} by @${{ github.actor }}
on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Positionals'
        required: true
        type: choice
        default: 'prerelease'
        options:
          - major
          - minor
          - patch
          - premajor
          - preminor
          - prepatch
          - prerelease
          - graduate
          - build-metadata
      preid:
        description: 'Prerelease identifier'
        required: true
        type: choice
        default: 'alpha'
        options:
          - alpha
          - beta
          - rc
      build-metadata:
        description: 'Build metadata'
        required: true
        type: number
        default: 0
      force:
        description: "Force publish"
        required: true
        type: boolean
        default: false
      publish_npm:
        description: "Publish to npm"
        required: true
        type: boolean
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.actor }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_PACKAGE_TOKEN }}

jobs:
  # publish-version:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #   steps:
  #     - uses: actions/checkout@v3
  #       # with:
  #       #   fetch-depth: 0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - name: "Config npm"
  #       id: config-npm
  #       run: |
  #         npm set @gulabs:registry=https://npm.pkg.github.com
  #         npm set //npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}
  #         npm set @gusdk:registry=https://test.gusdk.gu.net
  #         npm set test.gusdk.gu.net/:_authToken=${{ secrets.GUSDK_TEST_NPM_TOKEN }}
  #     - run: npm install
  #     - run: npm run bootstrap
  #     - name: Version
  #       run: |
  #         git config user.name ${{ github.actor }}
  #         git config user.email ${{ github.actor }}@users.noreply.github.com
  #         if [ ${{ inputs.force }} == true ]; then FORCE='--force-publish'; else FORCE=''; fi
  #         BUMP='${{ inputs.bump }}'
  #         if [ ${{ inputs.bump }} == graduate ]; then BUMP='--conventional-commits --conventional-graduate --no-changelog'; fi
  #         if [ ${{ inputs.bump }} == build-metadata ]; then BUMP=$(git describe --tags --abbrev=0); fi
  #         npm run lerna -- version $BUMP --preid ${{ inputs.preid }} --build-metadata ${{ inputs.build-metadata }} $FORCE -y
  #         git describe --tags --abbrev=0
  #         echo "VERSION=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
  #     - name: "Publish"
  #       if: ${{ inputs.publish_npm == true }}
  #       run: npm run lerna -- publish from-git -y

  publish-version:
    runs-on: ubuntu-latest
    steps:
      - name: publish
        run: echo "name=v1.0.0" >> "$GITHUB_OUTPUT"
    outputs:
      name: ${{ steps.publish.outputs.name }}
  
  create-release:
    needs: publish-version
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ needs.publish-version.outputs.name }}"
      - run: echo "${{ needs.publish-version.outputs.output1 }}"